#!/usr/bin/bash

function run() {
    local testID="$1" repeat="$2" sleep="$3" rc=0
    logFile="testLog$(date +"%Y-%m-%d").txt"
    logLink="testLog.curr.txt"
    if [ ! -f "$logFile" ]; then
        touch "$logFile"
    fi
    if [ -L "$logLink" ]; then
        rl=$(readlink "$logLink")
        if [[ "$rl" != "$logFile" ]]; then
            ln -s -f "$logFile" "$logLink"
        fi
    else
        ln -s "$logFile" "$logLink"
    fi
    SAPHanaSR-testCluster --testFile="$test_dir/${testID}.json" \
                            --repeat="$repeat" \
                            --dumpFailures \
                            --defaultsFile="$test_dir/defaults.json" \
                            --properties="$test_prop" \
                            --remoteNodes $nodes \
                            --logFile "$local_dir/$logFile"; rc="$?"
    # ln -s -f testLog2023-03-31.txt testLog.curr.txt
    sleep "$sleep"; 
    return "$rc"
}

test_scenario="angi-ScaleUp"
test_case="nop"
test_prop="properties"
local_dir="$PWD"
nodes=""

while [ $# -gt 0 ]; do
    case "$1" in
        --test_scenario=* )
                test_scenario=${1#*=}
                ;;
        --node=* )
                nodes="$nodes ${1#*=}"
                ;;
        --properties=* )
                test_prop=${1#*=}
                ;;
    esac
    shift
done

test_dir="/usr/share/SAPHanaSR-tester/json/$test_scenario"

# TODO: test sequence should come from a json test sequence file
echo "nodes: $nodes, test_scenario=$test_scenario"
while true; do  
    run restart_cluster_turn_hana  1 300
    run kill_prim_inst  3 300
    run free_log_area  1 60
    run kill_prim_inst  1 120
    run free_log_area  1 60
    run standby_secn_node  2 300
    run kill_secn_inst  3 300
    run standby_prim_node  2 300
    run maintenance_with_standby_nodes  1 300
    run kill_prim_indexserver  1 300
    run nop  1  10 
    run kill_secn_indexserver  1 300
    run maintenance_cluster_turn_hana  1 300
    run restart_cluster  1 300
    run restart_cluster_hana_running  1 300
    run block_manual_takeover  1  60
    run kill_secn_node  1 120
    run kill_prim_node  1 120
done 
