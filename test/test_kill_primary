#!/bin/bash
#
# test_kill_primary (ScaleUp)
# 2023-02-24
# test steps expected
#
# STATUS 10 TEST START
# STATUS 20 ERROR DETECTED
# STATUS 30 BEGIN RECOVER
# STATUS 40 END RECOVER
#
########

set -u
source ./test-lib


function status_10() { # test status 10 is reached
    # output: all failed tests reported by checkAllKeyValue, nothing more!!
    getAllKeyValue

    patternsPrimarySite=(
        "lss=4"
        "srr=P"
        "lpt=1[6-9]........"
        "srHook=PRIM"
        "srPoll=PRIM"
    ) 

    patternsSecondarySite=(
        "lpt=30"
        "lss=4"
        "srr=S"
        "srHook=SOK"
        "srPoll=SOK"
    )

    patternsPrimaryHost=(
       "clone_state=PROMOTED" 
       "roles=master1:master:worker:master" 
       "score=150" 
       "site=$pSite" 
    )
 
    patternsSecondaryHost=(
       "clone_state=DEMOTED" 
       "roles=master1:master:worker:master" 
       "score=100" 
       "site=$sSite" 
    )
    
    checkAllKeyValue; rc="$?"
    return "$rc"
}

function status_20() { # test status 20 is reached
    # output: all failed tests reported by checkAllKeyValue, nothing more!!
    getAllKeyValue

    patternsPrimarySite=(
        "lss=[12]" 
        "srr=P" 
        "lpt=1[6-9]........" 
        "srHook=(PRIM|SWAIT)" 
        "srPoll=PRIM"
    ) 

    patternsSecondarySite=(
        "lpt=30"
        "lss=4"
        "srr=S"
        "srHook=SOK"
        "srPoll=SOK"
    )

    patternsPrimaryHost=(
       "clone_state=(PROMOTED|DEMOTED)" 
       "roles=master1::worker:" 
       "score=90" 
       "site=$pSite" 
    )
 
    patternsSecondaryHost=(
       "clone_state=DEMOTED" 
       "roles=master1:master:worker:master" 
       "score=100" 
       "site=$sSite" 
    )

    checkAllKeyValue; rc="$?"
    return "$rc"
}

function status_30() { # test status 30 is reached
    # output: all failed tests reported by checkAllKeyValue, nothing more!!
    getAllKeyValue

    patternsPrimarySite=(
        "lpt=(1[6-9]........|30)" 
        "lss=1" 
        "srr=P" 
        "srHook=PRIM" 
        "srPoll=PRIM"
    ) 

    patternsSecondarySite=(
        "lpt=(1[6-9]........|30)" 
        "lss=4"
        "srr=(S|P)"
        "srHook=PRIM"
        "srPoll=SOK"
    )

    patternsPrimaryHost=(
       "clone_state=(UNDEFINED|DEMOTED)" 
       "roles=master1::worker:" 
       "score=90" 
       "site=$pSite" 
    )
 
    patternsSecondaryHost=(
       "clone_state=(DEMOTED|PROMOTED)" 
       "roles=master1:master:worker:master" 
       "score=(100|145)" 
       "site=$sSite" 
       "srah=T"
    )

    checkAllKeyValue; rc="$?"
    return "$rc"
}

function status_40() { # test status 40 is reached
    # output: all failed tests reported by checkAllKeyValue, nothing more!!
    getAllKeyValue

    patternsPrimarySite=(
        "lpt=30"
        "lss=4"
        "srr=S"
        "srHook=SOK"
        "srPoll=SOK"
    ) 

    patternsSecondarySite=(
        "lss=4"
        "srr=P"
        "lpt=1[6-9]........"
        "srHook=PRIM"
        "srPoll=PRIM"
    )

    patternsPrimaryHost=(
       "clone_state=DEMOTED" 
       "roles=master1:master:worker:master" 
       "score=100" 
       "site=$pSite" 
    )
 
    patternsSecondaryHost=(
       "clone_state=PROMOTED" 
       "roles=master1:master:worker:master" 
       "score=150" 
       "site=$sSite" 
    )
    
    checkAllKeyValue; rc="$?"
    return "$rc"
}

function action_10() {
   local sidadm="ha1adm"
   local node="$1"
   local rc=0
   message "ACTION: HDB kill-9 on node $node"
   timeout 10 ssh "$node" 'su - '"$sidadm"' -c "HDB kill-9" 2>/dev/null 1>/dev/null' rc="$?"
   message "ACTION: HDB kill-9 on node $node rc=$rc"
   return "$rc"
}

init "$@"

if loopForStatus 10  1; then
   action_10 "$pHost"
   if loopForStatus 20 60 && \
      loopForStatus 30 60 && \
      loopForStatus 40 60 ; then
            message "RESULT: TEST SUCCESS"
   else
        message "RESULT: TEST FAILED" 
   fi
else
   message "RESULT: PREREQUISITES NOT MATCHED"
fi
